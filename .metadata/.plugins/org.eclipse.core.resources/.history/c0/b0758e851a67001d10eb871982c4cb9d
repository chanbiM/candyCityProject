package dao;


import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;

import common.JdbcUtill;
import vo.MemberVO;
import vo.PostVO;

public class PostDAO {
	//게시글 작성
	public int insertPost(PostVO postVo, MemberVO memberVo) {
		int n = 0;
		
		Connection conn = null;
		PreparedStatement pstmt = null;
		String sql = "insert into post values('post-'||post_seq.nextval,?,SYSDATE,?,?,?,'',?)";
	
		conn = JdbcUtill.getConnection();
		
		try {
			pstmt = conn.prepareStatement(sql);
			
			pstmt.setString(1, memberVo.getId());
			pstmt.setString(2, postVo.getTitle());
			pstmt.setString(3, postVo.getContents());
			pstmt.setString(4, postVo.getCommentO());
			pstmt.setString(5, postVo.getPostType());
			
	
			n = pstmt.executeUpdate();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} finally {
			JdbcUtill.close(conn, pstmt);
		}
		
		return n;
	}
	
	//게시글 수 업데이트
		public int updatePostNum(String id) {
			int n = 0;
			Connection conn = null;
			PreparedStatement pstmt = null;
			String sql = "update member set post_num=post_num+1 where id=?";
			
			try {
				conn = JdbcUtill.getConnection();
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, id);
				
				n = pstmt.executeUpdate();
			} catch (Exception e) {
				e.printStackTrace();
			} finally {
				JdbcUtill.close(conn, pstmt);
			}
			return n;
		}
		
		public ArrayList<PostVO> getRepresentativePost(String id){
			ArrayList<PostVO> list = new ArrayList<PostVO>();
			Connection conn = null;
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			String sql = "select ROWNUM, a.* " + 
					"from (SELECT post_code, id, write_date, title, contents, comment_o, update_date, post_type " + 
					"FROM post " + 
					"where id=?" + 
					"ORDER BY post_code desc) a " + 
					"where ROWNUM <= 1";
			
			try {
				conn = JdbcUtill.getConnection();
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, id);
				
				rs = pstmt.executeQuery();
				
				while (rs.next()) {
					PostVO vo = new PostVO();
					vo.setPostCode(rs.getString("post_code"));
					vo.setId(rs.getString("id"));
					vo.setWriteDate(rs.getDate("write_date"));
					vo.setTitle(rs.getString("title"));
					vo.setContents(rs.getString("contents"));
					vo.setCommentO(rs.getString("comment_o"));
					vo.setUpdateDate(rs.getDate("update_date"));
					vo.setPostType(rs.getString("post_type"));
					
					list.add(vo);
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
				System.out.println("테이블 데이터 조회 실패");
			} finally {
				 JdbcUtill.close(conn, pstmt, rs);
			}
			return list;
		}
		
		public ArrayList<PostVO> getPost(String id){
			ArrayList<PostVO> list = new ArrayList<PostVO>();
			Connection conn = null;
			PreparedStatement pstmt = null;
			ResultSet rs = null;
			String sql = "";
			
			try {
				conn = JdbcUtill.getConnection();
				pstmt = conn.prepareStatement(sql);
				pstmt.setString(1, id);
				
				rs = pstmt.executeQuery();
				
				while (rs.next()) {
					PostVO vo = new PostVO();
					vo.setPostCode(rs.getString("post_code"));
					vo.setId(rs.getString("id"));
					vo.setWriteDate(rs.getDate("write_date"));
					vo.setTitle(rs.getString("title"));
					vo.setContents(rs.getString("contents"));
					vo.setCommentO(rs.getString("comment_o"));
					vo.setUpdateDate(rs.getDate("update_date"));
					vo.setPostType(rs.getString("post_type"));
					
					list.add(vo);
				}
				
			} catch (SQLException e) {
				e.printStackTrace();
				System.out.println("테이블 데이터 조회 실패");
			} finally {
				 JdbcUtill.close(conn, pstmt, rs);
			}
			return list;
		}
}
